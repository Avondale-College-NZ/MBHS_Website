@model PaginatedList<MBHS_Website.Models.Grade>

@{
    ViewData["Title"] = "Index";
}

<h1>Grade</h1>
@if (User.IsInRole("User") || User.IsInRole("Manager") || User.IsInRole("Admin"))
                {
<p>
    <a asp-action="Create">Create New</a>
</p>
    <form asp-controller="Grade" asp-action="Index">
        <p>
            Student's Last Name: <input type="text" name="SearchString" />
            <input type="submit" value="Filter" />
        </p>
    </form>
}
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["GradeSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Grade</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SubjectSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Subject</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StudentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Student</a>

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Mark)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Exam.Subject.Title)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Exam.Date)
                </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Student.FirstName) @Html.DisplayFor(modelItem => item.Student.LastName)
            </td>
             
                
            <td>
                    @if (User.IsInRole("User") || User.IsInRole("Manager") || User.IsInRole("Admin"))
                        {
                        <span>
                            <a asp-action="Edit" asp-route-id="@item.GradeId">Edit</a> |

                            <a asp-action="Delete" asp-route-id="@item.GradeId">Delete</a> |

                        </span>
                        }
                    <a asp-action="Details" asp-route-id="@item.GradeId">Details</a>
            </td>
               
        </tr>
}
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>