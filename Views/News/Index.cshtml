 @model IEnumerable<MBHS_Website.Models.News>

@{
    ViewData["Title"] = "Index";
}




            <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recent Events</title>
    <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js"></script>

    @if (User.IsInRole("Admin"))
    {
        <style>
            @@keyframes up-enter {
                0% {
                    transform: translateY(-0px);
                }

                100% {
                    transform: translateY(-60px);
                }
            }
        </style>
        <script>

            document.addEventListener('DOMContentLoaded', function () {
                gsap.set('main', { y: -60 })

                const uncover = gsap.timeline({ paused: true })

                uncover
                    .to('main', { y: -300, ease: 'none' })
                    ;

                ScrollTrigger.create({
                    trigger: '.top-img',
                    start: 'top 100px',
                    end: '+=50%',
                    animation: uncover,
                    scrub: true,
                });

            });
        </script>
    }
    else
    {
        <style>
            @@keyframes up-enter {
                0% {
                    transform: translateY(-60px);
                }

                100% {
                    transform: translateY(-120px);
                }
            }
        </style>
        <script>

            document.addEventListener('DOMContentLoaded', function () {
                gsap.set('main', { y: -120 })

                const uncover = gsap.timeline({ paused: true })

                uncover
                    .to('main', { y: -300, ease: 'none' })
                    ;

                ScrollTrigger.create({
                    trigger: '.top-img',
                    start: 'top 100px',
                    end: '+=50%',
                    animation: uncover,
                    scrub: true,
                });

            });
        </script>
    }
    <style>
/*         body {
            display: flex;
            flex-direction: column;
            align-items: center;
        } */
        .event-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        .event-item {
            background-color: #ffffff;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 20px;
            padding: 20px;
            box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
        }
        .event-item:hover {
            background-color: #fce4e4; /* Light red on hover */
            box-shadow: 0 6px 12px rgba(0,0,0,0.2);
        }
        .event-title {
            font-size: 1.5em;
            color: #00205b;
            text-decoration: none;
            display: block;
            margin-bottom: 10px;
            
        }

        .event-date {
            color: #ff4d4d; /* Red color */
            font-size: 1.1em;
            margin-bottom: 10px;
        }
        .event-description {
            color: #333;
        }
    



        .body-container {
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, rgba(219,222,233,1) 20%, rgba(233,221,221,1) 60%);
        }

        main {
            animation: 0.5s up-enter;
           
            padding: 5%;
        
            margin: auto;
            max-width: 1000px;
            min-height: 90vh;
            border-radius: 20px;
            position: relative;
            margin-bottom: -320px;
          
        }
      
          

        @@keyframes fade-in {
            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        section {
            animation: 0.5s fade-in;
            padding: 5% 0 5% 0;
        }

        h2 {
            color: black;
            font-weight: 500;
        }

        main p {
            color: black; /* Adjust text color as needed */
            font-family: "Noto Sans",sans-serif;
        }


        .top-img {
            position: relative;
            top: 0;
            max-width: 100%;
            width: 100vw;
            height: 400px;
            filter: brightness(.9);
            object-fit: cover;
            object-position: 60% 50%;
        }

        section {
            border-bottom: 0.5px solid #373636;
        }

        .ending {
            padding: 6% 0 0 0;
            color: #272727;
            font-style: italic;
            text-align: center;
        }

        section img {
            border-radius: 5px;
            margin: 15px;
            margin-top: 0;
        }

   
    </style>
  
</head>
    <body class="sports-container">
        <img class="top-img" src="~/images/MBHS news.png" />
        <main>
          @if (User.IsInRole("Admin")){
        <p>
            <a asp-action="Create">Create New</a>
        </p>
            }
        <ul id="eventList" class="event-list">
            @foreach (var item in Model)
            {
          
                    int max = 10;
                    int i = 0;
                    string Test = "";

          
                    //     // inner text will strip out all html, and give us plain text
                    string postText = item.Post;

                    // we split by space to get all the words in this element
                    string[] elementWords = postText.Split(new char[] { ' ' });

                    foreach (string word in elementWords)
                    {
                        if (i < max)
                        {
                            i++;
                            Test = Test + " " + word;
                        }
                    }
                Test = Test + "...";
         
           <a asp-action="Details" asp-route-id="@item.NewsId">
            <li class="event-item">
                    <div class="event-title">@Html.DisplayFor(modelItem => item.Title)</div>
                    <div class="event-date">@Html.DisplayFor(modelItem => item.Date)</div>
                    <div class="event-description">@Test</div>
                    

                </li>
                </a>
            }
        </ul>

        </main>
</body>
</html>
